---
layout: default
---


## Projects

[projectTag]
### [Chisel Debugger](https://github.com/TheAIBot/ChiselDebugger)

Hardware debugger made to debug hardware generated by Chisel. Displays a FIRRTl circuit as a digital circuit. Additionally providing a VCD of the circuit allows the debugger to display the state of the whole circuit for any time recorded in the VCD file.

[codeTag]C#[/codeTag]
[codeTag]Blazor[/codeTag]
[codeTag]HTML[/codeTag]
[codeTag]CSS[/codeTag]
[codeTag]JS[/codeTag]
[/projectTag]


[projectTag]
### [Digital microfluidic IDE](https://github.com/TheAIBot/Bioly)

IDE for a visual programming language where one can specify a chemical process. Automatically converts those programs into a set of commands that defines how dropslets should move around, mix etc. on a 2D board that uses electrowetting to move the droplets around. Supports simulating the commands or sending them to a board.

[codeTag]C#[/codeTag]
[codeTag]HTML[/codeTag]
[codeTag]CSS[/codeTag]
[codeTag]JS[/codeTag]
[/projectTag]


[projectTag]
### [DNNBasic](https://github.com/TheAIBot/DNNBasic)

A library for making and trainning neural networks on a GPU. The backend implements CUDA kernels for PEMDAS, matrix multiply, multi dimensional matrix multiply, max, sum, permute and many others. Frontend API is made to imitate PyTorch and its simplicity.

[codeTag]C++[/codeTag]
[codeTag]CUDA[/codeTag]
[/projectTag]


[projectTag]
### [VoxelWorld](https://github.com/TheAIBot/VoxelWorld)

Procedurally generated planets made out of voxels. Voxels a generated in 3D grids which are stored in an octree.Voxel resolution is dynamically changed depending on the viewers distance to each grid. The entire project mainly focuses on optimizing the generation of voxels.

[codeTag]C#[/codeTag]
[codeTag]OpenGL[/codeTag]
[codeTag]SIMD[/codeTag]
[/projectTag]


[projectTag]
### [Value Change Dump(VCD) Parser](https://github.com/TheAIBot/ChiselDebugger/tree/master/VCDReader)

High performance VCD parser. Allocation free command parsing. SIMD optimized parsing.  It parses the 4-state VCD format described in [IEEE std 1800-2017](https://standards.ieee.org/standard/1800-2017.html).

[codeTag]C#[/codeTag] 
[codeTag]SIMD[/codeTag]
[/projectTag]


[projectTag]
### [Multi Agent Graph Search](https://github.com/TheAIBot/MultiAgentGraphSearch)

Given a 2D grid of robots, walls, boxes and box goals, find an efficient way to move the robots around to move the boxes to their goals. This solution uses a graph search based approach that focuses on being both memory and CPU efficient.

[codeTag]C#[/codeTag] 
[/projectTag]